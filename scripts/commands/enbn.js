const axios = require("axios");

module.exports.config = {
  name: "enbn",
  version: "1.0.1",
  permission: 0,
  credits: "Joy Ahmed",
  description: "en ржмрж╛ bn ржжрж┐рзЯрзЗ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ ржнрж╛рж╖рж╛рзЯ ржЕржирзБржмрж╛ржж (reply рж╕рж╣)",
  prefix: "true",
  category: "tools",
  usages: "enbn en [text] ржмрж╛ enbn bn [text] ржЕржержмрж╛ reply рж╕рж╣ ржмрзНржпржмрж╣рж╛рж░",
  cooldowns: 3,
};

module.exports.run = async function({ api, event, args }) {
  let lang = args[0] ? args[0].toLowerCase() : null;
  let text = args.slice(1).join(" ");

  // ржпржжрж┐ args ржирж╛ ржерж╛ржХрзЗ ржмрж╛ ржХржо рж╣рзЯ, reply ржерзЗржХрзЗ ржирзЗрзЯрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛
  if ((!lang || !["en", "bn"].includes(lang)) && event.messageReply) {
    // reply ржерзЗржХрзЗ text ржирж┐ржмрзЛ, lang рж╣ржмрзЗ undefined (ржирж┐ржЪрзЗ ржЪрзЗржХ)
    text = event.messageReply.body;
    lang = null; // ржкрж░рзЗ detect ржХрж░ржмрзЛ
  }

  // reply ржерзЗржХрзЗ ржирж┐рж▓рзЗ lang ржирж╛ ржерж╛ржХрж▓рзЗ default detect ржХрж░ржмрзЛ
  if (!text) {
    return api.sendMessage("тЭЧ ржЕржирзБржмрж╛ржжрзЗрж░ ржЬржирзНржп text рж▓рж┐ржЦрзБржи ржЕржержмрж╛ reply ржжрж┐рзЯрзЗ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржиред\n\nржЙржжрж╛рж╣рж░ржг:\nenbn en ржЖржорж┐ рждрзЛржорж╛ржХрзЗ ржнрж╛рж▓рзЛржмрж╛рж╕рж┐\nржмрж╛ reply ржжрж┐рзЯрзЗ enbn bn", event.threadID, event.messageID);
  }

  // ржпржжрж┐ lang ржирж╛ ржжрзЗржУрзЯрж╛ рж╣рзЯ, рждрж╛рж╣рж▓рзЗ auto detect ржХрж░ржмрзЛ
  if (!lang) {
    // Google translate ржжрж┐рзЯрзЗ detect
    try {
      const detectRes = await axios.post("https://translate.googleapis.com/translate_a/single", null, {
        params: {
          client: "gtx",
          sl: "auto",
          tl: "en",
          dt: "t",
          q: text
        }
      });
      lang = detectRes.data[2]; // detected language code: en / bn / others
    } catch {
      lang = "en"; // fallback
    }
  }

  // Lang ржХрзЗ normalize ржХрж░ржмрзЛ (en ржмрж╛ bn ржирж╛ рж╣рж▓рзЗ default en)
  lang = lang === "bn" ? "bn" : "en";

  // Target language opposite рж╣ржмрзЗ
  const targetLang = lang === "en" ? "bn" : "en";

  try {
    const translateRes = await axios.post("https://translate.googleapis.com/translate_a/single", null, {
      params: {
        client: "gtx",
        sl: lang,
        tl: targetLang,
        dt: "t",
        q: text
      }
    });

    const translated = translateRes.data[0].map(x => x[0]).join("");

    const msg =
`тХнтХ╝|тФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБ|тХ╛тХо
ЁЯИп ржнрж╛рж╖рж╛: ${lang === "en" ? "ржЗржВрж░рзЗржЬрж┐" : "ржмрж╛ржВрж▓рж╛"}
ЁЯФБ ржЕржирзБржмрж╛ржж (${targetLang === "bn" ? "ржмрж╛ржВрж▓рж╛" : "ржЗржВрж░рзЗржЬрж┐"}):
${translated}
тХ░тХ╝|тФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБ|тХ╛тХп`;

    return api.sendMessage(msg, event.threadID, event.messageID);

  } catch (err) {
    console.error(err);
    return api.sendMessage("тЭМ ржЕржирзБржмрж╛ржж ржХрж░рждрзЗ рж╕ржорж╕рзНржпрж╛ рж╣рзЯрзЗржЫрзЗ!", event.threadID, event.messageID);
  }
};
